Dating app project notes

jane password
dave password

--shortcuts
ctrl shift p - command palette
ctrl shift ' - terminal
ctrl + . - quick fix
prop
propfull
div.classname - shortcut for div making

--terminal
cd api
dotnet watch run 
cd client 
ng serve

--terminal shortcuts
cd .. up a level 

Using the terminal to generate a nav bar 
cd client 
ng generate -h to help show what can be generated (or use g for short)
create component by (c is short for component)
change src to app by 
cd .. to get out of folders and change directory to datingapp/client/src/app
cd src/app
if you want to skip testing then use --skip-tests
create component by 
ng g c 

--angular snipits and help

a-ngmodel - shortcut for angular 2 way binding
[] square brackets typically used for recieving data from our binding
() submitting data 
2 way binding when you see both [()]

service - is a singleton which means it will live and not be distroyeduntil the service is stopped so the app has been closed or user has navigated always
components - are destroeyed as soon as they are not in use
observable - is lazy it doesnt do anything until you subscribe to it


https://localhost:5001/api/users

http://localhost:4200/



git init - initialises a repository when your instead the directory

commiting code - 
changes click the plus button and it will stage your changes 
give a commit message 
then the three dots and choose commit and then commit
push to 
remote repository

adding new information to the database 
stop the migration by writing in the terminal 
>dotnet ef migrations remove
start a new migration 
>dotnet ef migrations add UserPasswordAdded


using 'this' to gain access to any class 

--structural directives examples

when using angular you can use a structural directive to loop over 

*ngIf to set as logged in to hide it when logging in 



--install angular cli 

npm install -g @angular/cli 
ng new client 
angular routing y
css style format

check application is working cd client 
ng serve - starts the angular development server
check it by going to localhost:4200

remove code from app.component.html
interpolation changing title to data app in app.compontent.ts file
use {{title}} in html file h1 tag

--app.module.ts 
declares the components they are available in our application 
in the declaration array

imports other angular modules to use in the application
browser module - displays our app in browser for example

app.module.ts 
import the module for httpclient 
import { HttpClientModule } from '@angular/common/http';
in imports put - HttpClientModule

--observable 
the response body 

--adding cors 
blocks http request that is not in the same origin 

https://localhost:5001/api/users

--enable angular to be run on https
add sll certificate into the client folder

--authentication

to make sure your endpoints are protected with autorization 
you can give them an authorize attribute 


--controller

every controller shares similar properties 
they will have a controller property and a route property
 and they always inherite at the controller base

create a base API controller that will save us from repeating ourselves in each 
controller 
which specify the api controller and route then you specify
 the baseapi controller rather than controller base 

when you inherite from other classes then you inherit
 all its attributes methods and properties 

--creating a new controller to manage user login and register 


--DTO Data transfer objects

password needs to be an object to recieve the properties in the body of our request
you can hide properties 
flatten objects if they are nested
circlar reference exceptions?


//GIT 

git ignore 
to remove the bin file as they are always created on build
add file names to the bottom of the file if you dont want 
them to be public example appsettings.json (api keys)

https://localhost:5001/weatherforecast

httpGET is the end point
the request to API 
it returns the results of httpGET to an array

program.cs is starting file 
runs the method in the public class

configuration information is in the appsettings.json and appsettings.development.json
program class calls startup.cs class 

configuration - dependancies injection container 
if you want to make class or service avaialble to other areas of our
 application you can add them to the configuration class 

--Creating the first entity

entity framework is a language that microsoft created to deal with 
database queries and variables for us 

entity framework uses LINQ queries that are used to manipulate the database 
without using sql queries
includes automatic conventions 

--syncronus code
means the request to the database will be blocked (blocking the thread)
until the request has been fulfiled

--asyncronus code

----Observables 

New standard for managing async data included in ES7 
Observables are lazy collections of multiple values over time 
observables are like a newsletter, only people subscribed recieve it 

promise vs observables 
promise a single future value, not lazy, can not cancel
observable, emits multiple values over time, lazy (not until subscribed), able to cancel, can use with map, filter, reduce etc 

map function applies a function to everything in the array 
what is an asyncn pipe?
to unsubsribed from an observables use an async pipe then it unsubscribes automatically?
a http request doesnt need to be unsubscribed from 
